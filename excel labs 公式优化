/*三大基石函数，行列数组返回函数，空值去除函数*/
ROW_AYY = LAMBDA(ROW_ARRAY,ANY,
    LET(
        ARR, MAP(ROW_ARRAY,
            LAMBDA(Y,ROW(Y))
        ),
        IF(
            ISOMITTED(ANY),
            ARR,
            MAX(ARR)-MIN(ARR)+1
        )
    )
);
COL_AYY = LAMBDA(COL_ARRAY,ANY,
    LET(
        ARR, MAP(COL_ARRAY,
            LAMBDA(Y,COLUMN(Y))
        ),
        IF(
            ISOMITTED(ANY),
            ARR,
            MAX(ARR)-MIN(ARR)+1
        )
    )
);
CLEAN_ARRAY = LAMBDA(
    ARRAY,
    LET(
        ZERO_NUM, COUNTIF(TAKE(ARRAY,,1),""),
        SORT_ARR, MAP(
                        TAKE(ARRAY,,1),
                        LAMBDA(
                            Y,
                            IF(Y<>"",ROW(Y),1048577)
                        )
                    ),
        TAKE(SORTBY(ARRAY,SORT_ARR),ROW_AYY(TAKE(ARRAY,,1),1)-ZERO_NUM,)
    )
);
/*基本函数，连续选择函数，随机抽取函数，坍塌函数*/
XCHOOSE = LAMBDA(
    ARRAY,INDEX_NUM,
    LET(
        ROW_NUM, ROW_AYY(ARRAY,1),
        COL_NUM, COL_AYY(ARRAY,1),
        IF(ROW_NUM=1,
            INDEX(ARRAY,1,INDEX_NUM),
            IF(COL_NUM=1,
                INDEX(ARRAY,INDEX_NUM,1),
                IF(AND(ROW_NUM>1, COL_NUM>1),
                    LET(
                        COL_NUM_TWO, ROUNDUP(INDEX_NUM/ROW_NUM,0),
                        ROW_NUM_TWO, INDEX_NUM-(COL_NUM_TWO-1)*ROW_NUM,
                        INDEX(ARRAY,ROW_NUM_TWO,COL_NUM_TWO)
                    ),""
                )
            )
        )
    )
);
RANDCHOOSE = LAMBDA(ARRAY,
    LET(
        ROW_NUM, ROW_AYY(ARRAY,1),
        COL_NUM, COL_AYY(ARRAY,1),
        ROW_RAND_NUM, RANDBETWEEN(1,ROW_NUM),
        COL_RAND_NUM, RANDBETWEEN(1,COL_NUM),
        INDEX(ARRAY,ROW_RAND_NUM,COL_RAND_NUM)
    )
);
COLLAPSE = LAMBDA(
    ARRAY, ROW_NUM_START,COL_NUM_START,
    LET(
        ROW_NUM, ROW_AYY(ARRAY,1),
        COL_NUM, COL_AYY(ARRAY,1),
        IF(ISOMITTED(ROW_NUM_START),
            IF(COL_NUM_START<>COL_NUM,
                VSTACK(INDEX(ARRAY,,COL_NUM_START), COLLAPSE(ARRAY,,COL_NUM_START+1)),
                INDEX(ARRAY,,COL_NUM_START)
            ),
            IF(ISOMITTED(COL_NUM_START),
                IF(ROW_NUM_START<>ROW_NUM,
                    HSTACK(INDEX(ARRAY,ROW_NUM_START,), COLLAPSE(ARRAY,ROW_NUM_START+1,)),
                    INDEX(ARRAY,ROW_NUM_START,)
                ),""
            )
        )
    )
);
/*高级函数,满足返回函数，重复数量显示函数，重复值获取函数*/
// bool为0时对第一行进行查找，为1则查找第一列
ZLOOKUP = LAMBDA(
    index,array,bool,
    IF(bool =1,
        LET(
            row_count,ROW_AYY(array,1),
            ok_array,LAMBDA(x,IF(INDEX(array,x,1)=index,x,1048577))(SEQUENCE(row_count,1,1,1)),
            ok_count,SUM(LAMBDA(x,IF(INDEX(array,x,1)=index,1,0))(SEQUENCE(row_count,1,1,1))),
            IF(ok_count=0,NA(),TAKE(SORTBY(array,ok_array,1),ok_count,))
        ),
        IF(bool=0,
            LET(
                new_arr,TRANSPOSE(array),
                col_count,COL_AYY(array,1),
                ok_array,LAMBDA(x,IF(INDEX(array,1,x)=index,x,16385))(SEQUENCE(col_count,1,1,1)),
                ok_count,SUM(LAMBDA(x,IF(INDEX(new_arr,x,1)=index,1,0))(SEQUENCE(col_count,1,1,1))),
                IF(ok_count=0,NA(),TRANSPOSE(TAKE(SORTBY(new_arr,ok_array,1),ok_count,)))
            ),NA()
        )
    )
);
REPT_NUM = LAMBDA(
    array,
    LET(
        new_arr, COLLAPSE(array,,1),
        COUNTA(new_arr)-COUNTA(UNIQUE(new_arr))
    )
);
REPT_GET = LAMBDA(
    array,
    LET(
        new_arr, COLLAPSE(array,,1),
        UNIQUE(new_arr)
    )
)
